<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
            http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
	default-autowire="byName" default-lazy-init="false">

	<import resource="classpath:/applicationContext-dubbo.xml"/>

	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="${dubbo_port}"
		threads="1000" />

	<dubbo:provider timeout="10000" loadbalance="random"
		executes="1000" actives="300" filter="-exception,eduexception" />

	<!-- 服务提供 -->
	<!--测试dubbo -->

	<!-- 和本地bean一样实现服务 -->
	<dubbo:service interface="com.netease.edu.boot.hystrixtest.service.HystrixTestWithFallbackService"
		ref="hystrixTestWithFallbackService" register="${local_service_enable}"
		version="1.0.0" />
	<dubbo:service interface="com.netease.edu.boot.hystrixtest.service.HystrixTestNoFallbackService"
				   ref="hystrixTestNoFallbackService" register="${local_service_enable}"
				   version="1.0.0" />


	
</beans>
